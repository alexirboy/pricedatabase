#!/bin/env bash

# Initial print variables
print1=off
print2=off
print3=off
print4=off
print5=off
print6=off
print7=off
print8=off
print9=off
printing=""
header='Move No'


dialog_cancel=1
dialog_esc=255
csv='~/Documents/price_database/08_10_2020.csv'
title="Price Filter"


# create a clear extra button that clears all the variables that has been set6 in current session
clear_all(){
  out1=""
  out2=""
  out3=""
  print1=off
  print2=off
  print3=off
  print4=off
  print5=off
  print6=off
  print7=off
  print8=off
  print9=off
  printing=""
  header='Move No'
  awk_output=""
  prints=""
  unset main1
  unset main2
  unset main3
}
clear_2(){
  out2=""
  unset main2
}
clear_3(){
  out3=""
  unset main3
}
# basically makes them all become "" again
file_print(){
  echo ""
  echo "#+BEGIN_SRC awk :in-file $csv :exports results"
  echo 'BEGIN {FS=","'
  echo "print \"$header\"}"
  echo "$out1 $out2 $out3 {print NR$printing}"
  echo "#+END_SRC"
}
custom_query(){
  for i in "${!main1[@]}" "${!main2[@]}" "${!main3[@]}"; do
    case "${i}" in
      1)
        case ${main1[$i]} in
          1)
            out1='$3 ~ "F[0-9]"';;
          2)
            out1='$3 ~ /H*TF/';;
          3)
            out1='$3 ~ /\/R|R$|\w R|R\//';;
          4)
            out1='$3 ~ "RB"';;
        esac
        case ${main2[$i]} in
          1)
            out2='&& $3 ~ "F[0-9]"';;
          2)
            out2='&& $3 ~ /H*TF/';;
          3)
            out2='&& $3 ~ /\/R|R$|\w R|R\//';;
          4)
            out2='&& $3 ~ "RB"';;
        esac
        case ${main3[$i]} in
          1)
            out3='&& $3 ~ "F[0-9]"';;
          2)
            out3='&& $3 ~ /H*TF/';;
          3)
            out3='&& $3 ~ /\/R|R$|\w R|R\//';;
          4)
            out3='&& $3 ~ "RB"';;
        esac ;;
      2)
        case ${main1[$i]} in
          1)
            out1='$4 == "WM"';;
          2)
            out1='$4 == "WM-FM"';;
          3)
            out1='$4 == "OM"';;
        esac
        case ${main2[$i]} in
          1)
            out2='&& $4 == "WM"';;
          2)
            out2='&& $4 == "WM-FM"';;
          3)
            out2='&& $4 == "OM"';;
        esac
        case ${main3[$i]} in
          1)
            out3='&& $4 == "WM"';;
          2)
            out3='&& $4 == "WM-FM"';;
          3)
            out3='&& $4 == "OM"';;
        esac;;
      3)
        case ${main1[$i]} in
          1)
            out1='$5 ~ "F[0-9]"';;
          2)
            out1='$5 ~ "^F[0-9]"';;
          3)
            out1='$5 ~ "H"';;
          4)
            out1='$5 ~ "H\w* F"';;
          5)
            out1='$5 ~ "^H\w* F"';;
          6)
            out1='$5 ~ "H\w* R"';;
          7)
            out1='$5 ~ "^H\w* R"';;
          8)
            out1='$5 ~ /\/R|R$|\w R|R\//';;
          9)
            out1='$5 ~ /^R$/';;
          10)
            out1='$5 ~ "RB"';;
          11)
            out1='$5 ~ "^RB$"';;
        esac
        case ${main2[$i]} in
          1)
            out2='&& $5 ~ "F[0-9]"';;
          2)
            out2='&& $5 ~ "^F[0-9]"';;
          3)
            out2='&& $5 ~ "H"';;
          4)
            out2='&& $5 ~ "H\w* F"';;
          5)
            out2='&& $5 ~ "^H\w* F"';;
          6)
            out2='&& $5 ~ "H\w* R"';;
          7)
            out2='&& $5 ~ "^H\w* R"';;
          8)
            out2='&& $5 ~ /\/R|R$|\w R|R\//';;
          9)
            out2='&& $5 ~ /^R$/';;
          10)
            out2='&& $5 ~ "RB"';;
          11)
            out2='&& $5 ~ "^RB$"';;
        esac
        case ${main3[$i]} in
          1)
            out3='&& $5 ~ "F[0-9]"';;
          2)
            out3='&& $5 ~ "^F[0-9]"';;
          3)
            out3='&& $5 ~ "H"';;
          4)
            out3='&& $5 ~ "H\w* F"';;
          5)
            out3='&& $5 ~ "^H\w* F"';;
          6)
            out3='&& $5 ~ "H\w* R"';;
          7)
            out3='&& $5 ~ "^H\w* R"';;
          8)
            out3='&& $5 ~ /\/R|R$|\w R|R\//';;
          9)
            out3='&& $5 ~ /^R$/';;
          10)
            out3='&& $5 ~ "RB"';;
          11)
            out3='&& $5 ~ "^RB$"';;
        esac;;
      4)
        case ${main1[$i]} in
          1)
            out1='$6 ~ /^F[0-9].%/';;
          2)
            out1='$6 ~ /^F[0-9].%$/';;
          3)
            out1='$6 ~ "synonymous"';;
          4)
            out1='$6 ~ /^F[0-9].% /';;
          5)
            out1='$6 ~ /^[SS|RR]/';;
          6)
            out1='$6 ~ /^SS$|^RR$/';;
          7)
            out1='$6 ~ /H\w* F/';;
          8)
            out1='$6 ~ /^H\w* F[0-9].%$/';;
          9)
            out1='$6 ~ /H\w* [SS|RR]/';;
          10)
            out1='^$6 ~ /H\w* [SS|RR]/';;
        esac
        case ${main2[$i]} in
          1)
            out2='&& $6 ~ /^F[0-9].%/';;
          2)
            out2='&& $6 ~ /^F[0-9].%$/';;
          3)
            out2='&& $6 ~ "synonymous"';;
          4)
            out2='&& $6 ~ /^F[0-9].% /';;
          5)
            out2='&& $6 ~ /^[SS|RR]/';;
          6)
            out2='&& $6 ~ /^SS$|^RR$/';;
          7)
            out2='&& $6 ~ /H\w* F/';;
          8)
            out2='&& $6 ~ /^H\w* F[0-9].%$/';;
          9)
            out2='&& $6 ~ /H\w* [SS|RR]/';;
          10)
            out2='&& ^$6 ~ /H\w* [SS|RR]/';;
        esac
        case ${main3[$i]} in
          1)
            out3='&& $6 ~ /^F[0-9].%/';;
          2)
            out3='&& $6 ~ /^F[0-9].%$/';;
          3)
            out3='&& $6 ~ "synonymous"';;
          4)
            out3='&& $6 ~ /^F[0-9].% /';;
          5)
            out3='&& $6 ~ /^[SS|RR]/';;
          6)
            out3='&& $6 ~ /^SS$|^RR$/';;
          7)
            out3='&& $6 ~ /H\w* F/';;
          8)
            out3='&& $6 ~ /^H\w* F[0-9].%$/';;
          9)
            out3='&& $6 ~ /H\w* [SS|RR]/';;
          10)
            out3='&& ^$6 ~ /H\w* [SS|RR]/';;
        esac;;
      5)
        case ${main1[$i]} in
          1)
            out1='$7 ~ /^no$|^no -/';;
          2)
            out1='$7 ~ /^yes$|^yes -/';;
          3)
            out1='$7 ~ /^yes -.*overshot/';;
          4)
            out1='$7 ~ /^yes -.*undershot/';;
          5)
            out1='$7 ~ /^no\/yes/';;
        esac
        case ${main2[$i]} in
          1)
            out2='&& $7 ~ /^no$|^no -/';;
          2)
            out2='&& $7 ~ /^yes$|^yes -/';;
          3)
            out2='&& $7 ~ /^yes -.*overshot/';;
          4)
            out2='&& $7 ~ /^yes -.*undershot/';;
          5)
            out2='&& $7 ~ /^no\/yes/';;
        esac
        case ${main3[$i]} in
          1)
            out3='&& $7 ~ /^no$|^no -/';;
          2)
            out3='&& $7 ~ /^yes$|^yes -/';;
          3)
            out3='&& $7 ~ /^yes -.*overshot/';;
          4)
            out3='&& $7 ~ /^yes -.*undershot/';;
          5)
            out3='&& $7 ~ /^no\/yes/';;
        esac;;
      6)
        case ${main1[$i]} in
          1)
            out1='$8 ~ "F[0-9]"';;
          2)
            out1='$8 ~ "^F[0-9]"';;
          3)
            out1='$8 ~ "H"';;
          4)
            out1='$8 ~ "H\w* F"';;
          5)
            out1='$8 ~ "^H\w* F"';;
          6)
            out1='$8 ~ "H\w* R"';;
          7)
            out1='$8 ~ "^H\w* R"';;
          8)
            out1='$8 ~ /\/R|R$|\w R|R\//';;
          9)
            out1='$8 ~ /^R$/';;
          10)
            out1='$8 ~ "RB"';;
          11)
            out1='$8 ~ "^RB$"';;
        esac
        case ${main2[$i]} in
          1)
            out2='&& $8 ~ "F[0-9]"';;
          2)
            out2='&& $8 ~ "^F[0-9]"';;
          3)
            out2='&& $8 ~ "H"';;
          4)
            out2='&& $8 ~ "H\w* F"';;
          5)
            out2='&& $8 ~ "^H\w* F"';;
          6)
            out2='&& $8 ~ "H\w* R"';;
          7)
            out2='&& $8 ~ "^H\w* R"';;
          8)
            out2='&& $8 ~ /\/R|R$|\w R|R\//';;
          9)
            out2='&& $8 ~ /^R$/';;
          10)
            out2='&& $8 ~ "RB"';;
          11)
            out2='&& $8 ~ "^RB$"';;
        esac
        case ${main3[$i]} in
          1)
            out3='&& $8 ~ "F[0-9]"';;
          2)
            out3='&& $8 ~ "^F[0-9]"';;
          3)
            out3='&& $8 ~ "H"';;
          4)
            out3='&& $8 ~ "H\w* F"';;
          5)
            out3='&& $8 ~ "^H\w* F"';;
          6)
            out3='&& $8 ~ "H\w* R"';;
          7)
            out3='&& $8 ~ "^H\w* R"';;
          8)
            out3='&& $8 ~ /\/R|R$|\w R|R\//';;
          9)
            out3='&& $8 ~ /^R$/';;
          10)
            out3='&& $8 ~ "RB"';;
          11)
            out3='&& $8 ~ "^RB$"';;
        esac;;
      7)
        case ${main1[$i]} in
          1)
            out1='$9 ~ /^F/';;
          2)
            out1='$9 ~ /^F[0-9].%$/';;
          3)
            out1='$9 ~ "synonymous"';;
          4)
            out1='$9 ~ /^[SS|RR]/';;
          5)
            out1='$9 ~ /^SS$|^RR$/';;
          6)
            out1='$9 ~ /H\w* F/';;
          7)
            out1='$9 ~ /^H\w* F/';;
          8)
            out1='$9 ~ /H\w* [SS|RR]/';;
          9)
            out1='$9 ~ /^H\w* [SS|RR]/';;
        esac
        case ${main2[$i]} in
          1)
            out2='&& $9 ~ /^F/';;
          2)
            out2='&& $9 ~ /^F[0-9].%$/';;
          3)
            out2='&& $9 ~ "synonymous"';;
          4)
            out2='&& $9 ~ /^[SS|RR]/';;
          5)
            out2='&& $9 ~ /^SS$|^RR$/';;
          6)
            out2='&& $9 ~ /H\w* F/';;
          7)
            out2='&& $9 ~ /^H\w* F/';;
          8)
            out2='&& $9 ~ /H\w* [SS|RR]/';;
          9)
            out2='&& $9 ~ /^H\w* [SS|RR]/';;
        esac
        case ${main3[$i]} in
          1)
            out3='&& $9 ~ /^F/';;
          2)
            out3='&& $9 ~ /^F[0-9].%$/';;
          3)
            out3='&& $9 ~ "synonymous"';;
          4)
            out3='&& $9 ~ /^[SS|RR]/';;
          5)
            out3='&& $9 ~ /^SS$|^RR$/';;
          6)
            out3='&& $9 ~ /H\w* F/';;
          7)
            out3='&& $9 ~ /^H\w* F/';;
          8)
            out3='&& $9 ~ /H\w* [SS|RR]/';;
          9)
            out3='&& $9 ~ /^H\w* [SS|RR]/';;
        esac;;
      8)
        case ${main1[$i]} in
          1)
            out1='$10 ~ /^no$|^no -/';;
          2)
            out1='$10 ~ /^yes$|^yes -/';;
          3)
            out1='$10 ~ /^yes -.*overshot/';;
          4)
            out1='$10 ~ /^yes -.*undershot/';;
          5)
            out1='$7 ~ /^no\/yes/';;
        esac
        case ${main2[$i]} in
          1)
            out2='&& $10 ~ /^no$|^no -/';;
          2)
            out2='&& $10 ~ /^yes$|^yes -/';;
          3)
            out2='&& $10 ~ /^yes -.*overshot/';;
          4)
            out2='&& $10 ~ /^yes -.*undershot/';;
          5)
            out2='&& $7 ~ /^no\/yes/';;
        esac
        case ${main3[$i]} in
          1)
            out3='&& $10 ~ /^no$|^no -/';;
          2)
            out3='&& $10 ~ /^yes$|^yes -/';;
          3)
            out3='&& $10 ~ /^yes -.*overshot/';;
          4)
            out3='&& $10 ~ /^yes -.*undershot/';;
          5)
            out3='&& $7 ~ /^no\/yes/';;
        esac;;
      9)
        case ${main1[$i]} in
          1)
            out1='$11 ~ /^OS/';;
          2)
            out1='$11 ~ /^OS - R$/';;
          3)
            out1='$11 ~ /^OS - RB/';;
          4)
            out1='$11 ~ /^DT|^DB/';;
          5)
            out1='$11 ~ /^HDT|^HDB/';;
          6)
            out1='$11 ~ /^QDB|^QDT/';;
        esac
        case ${main2[$i]} in
          1)
            out2='&& $11 ~ /^OS/';;
          2)
            out2='&& $11 ~ /^OS - R$/';;
          3)
            out2='&& $11 ~ /^OS - RB/';;
          4)
            out2='&& $11 ~ /^DT|^DB/';;
          5)
            out2='&& $11 ~ /^HDT|^HDB/';;
          6)
            out2='&& $11 ~ /^QDB|^QDT/';;
        esac
        case ${main3[$i]} in
          1)
            out3='&& $11 ~ /^OS/';;
          2)
            out3='&& $11 ~ /^OS - R$/';;
          3)
            out3='&& $11 ~ /^OS - RB/';;
          4)
            out3='&& $11 ~ /^DT|^DB/';;
          5)
            out3='&& $11 ~ /^HDT|^HDB/';;
          6)
            out3='&& $11 ~ /^QDB|^QDT/';;
        esac;;
    esac
  done
}
fieldt() {
  case $fields in
    1)
      field_title="What HTF move is this move in?"
      ;;
    2)
      field_title="What is this moves direction in realtion to the HTF move?"
      ;;
    3)
      field_title="What is the previous move on this TF"
      ;;
    4)
      field_title="What line did the Previous move son this TF start from?"
      ;;
    5)
      field_title="Did the start of the previous move over/undershoot?"
      ;;
    6)
      field_title="What move is this move?"
      ;;
    7)
      field_title="What line did this move start from?"
      ;;
    8)
      field_title="Did the start of this move over/undershoot?"
      ;;
    9)
      field_title="How did the beginning of this move reverse on the LTF?"
  esac
}

#while statements will not work for the print_default function
#it creates a endless loop
print_default(){
  if [ ${#main1[@]} -gt 0 ]; then
    case ${!main1[@]} in
      1)
        print1=on
        ;;
      2)
        print2=on
        ;;
      3)
        print3=on
        ;;
      4)
        print4=on
        ;;
      5)
        print5=on
        ;;
      6)
        print6=on
        ;;
      7)
        print7=on
        ;;
      8)
        print8=on
        ;;
      9)
        print9=on
        ;;
    esac
  fi 

  if [ ${#main2[@]} -gt 0 ]; then
    case ${!main2[@]} in
      1)
        print1=on
        ;;
      2)
        print2=on
        ;;
      3)
        print3=on
        ;;
      4)
        print4=on
        ;;
      5)
        print5=on
        ;;
      6)
        print6=on
        ;;
      7)
        print7=on
        ;;
      8)
        print8=on
        ;;
      9)
        print9=on
        ;;
    esac
  fi 

  if [ ${#main3[@]} -gt 0 ]; then
    case ${!main3[@]} in
      1)
        print1=on
        ;;
      2)
        print2=on
        ;;
      3)
        print3=on
        ;;
      4)
        print4=on
        ;;
      5)
        print5=on
        ;;
      6)
        print6=on
        ;;
      7)
        print7=on
        ;;
      8)
        print8=on
        ;;
      9)
        print9=on
        ;;
    esac
  fi 
}
what_selected() {
  case $main in
    1)
      main1=([$fields]=$queries)
      ;;
    2)
      main2=([$fields]=$queries)
      ;;
    3)
      main3=([$fields]=$queries)
      ;;
  esac 
}
query_field() {
    case $fields in
  1)
    fieldt
  queries=$(dialog \
    --title "$field_title" \
    --no-tags \
    --backtitle "$title" \
    --cancel-label "Back" \
    --menu "$field_title" 0 0 9 \
      1 "Fib Retracement" \
      2 'H(n)TF move - Before Reversal' \
      3 'Reversal' \
      4 'Reversal Breakout' \
      2>&1 1>&3)
  what_selected
  custom_query
      ;;
  2)
    fieldt
  queries=$(dialog \
    --title "$field_title" \
    --no-tags \
    --backtitle "$title" \
    --cancel-label "Back" \
    --menu "$field_title" 0 0 9 \
      1 'With Move' \
      2 'With Move - First Move' \
      3 'Opposite Move' \
      2>&1 1>&3)
  what_selected
  custom_query
      ;;
  3)
    fieldt
  queries=$(dialog \
    --title "$field_title" \
    --no-tags \
    --backtitle "$title" \
    --cancel-label "Back" \
    --menu "$field_title" 0 0 9 \
      1 "Fib Retracement" \
      2 "Fib Retracement - Exclusively" \
      3 'H(n)TF move before Reversal' \
      4 'H(n)TF Fib before Reversal' \
      5 'H(n)TF Fib before Reversal - Exclusively' \
      6 'H(n)TF Reversal before TTF Reversal' \
      7 'H(n)TF Reversal before TTF Reversal - Exclusively' \
      8 'Reversal' \
      9 'Reversal - Exclusively' \
      10 'Reversal Breakout' \
      11 'Reversal Breakout - Exclusively' \
      2>&1 1>&3)
  what_selected
  custom_query
      ;;
  4)
    fieldt
  queries=$(dialog \
    --title "$field_title" \
    --no-tags \
    --backtitle "$title" \
    --cancel-label "Back" \
    --menu "$field_title" 0 0 9 \
      1 'TTF Fib' \
      2 'TTF Fib - Exclusively' \
      3 'TTF Fib - Synonymous' \
      4 'TTF Fibs at H(n)TF' \
      5 'TTF Support/Resistance' \
      6 'TTF Support/Resistance - Exclusively' \
      7 'H(n)TF Fib' \
      8 'H(n)TF Fib - Exclusively' \
      9 'H(n)TF Support/Resistance' \
      10 'H(n)TF Support/Resistance - Exclusively' \
      2>&1 1>&3)
  what_selected
  custom_query
      ;;
  5)
    fieldt
  queries=$(dialog \
    --title "$field_title" \
    --no-tags \
    --backtitle "$title" \
    --cancel-label "Back" \
    --menu "$field_title" 0 0 9 \
      1 'No' \
      2 'Yes' \
      3 'Yes - Overshot' \
      4 'Yes - Undershot' \
      5 'No/Yes' \
      2>&1 1>&3)
  what_selected
  custom_query
      ;;
  6)
    fieldt
  queries=$(dialog \
    --title "$field_title" \
    --no-tags \
    --backtitle "$title" \
    --cancel-label "Back" \
    --menu "$field_title" 0 0 9 \
      1 "Fib Retracement" \
      2 "Fib Retracement - Exclusively" \
      3 'H(n)TF move before Reversal' \
      4 'H(n)TF Fib before Reversal' \
      5 'H(n)TF Fib before Reversal - Exclusively' \
      6 'H(n)TF Reversal before TTF Reversal' \
      7 'H(n)TF Reversal before TTF Reversal - Exclusively' \
      8 'Reversal' \
      9 'Reversal - Exclusively' \
      10 'Reversal Breakout' \
      11 'Reversal Breakout - Exclusively' \
      2>&1 1>&3)
  what_selected
  custom_query
      ;;
  7)
    fieldt
  queries=$(dialog \
    --title "$field_title" \
    --no-tags \
    --backtitle "$title" \
    --cancel-label "Back" \
    --menu "$field_title" 0 0 9 \
      1 'TTF Fib' \
      2 'TTF Fib - Exclusively' \
      3 'TTF Fib - Synoymous' \
      4 'TTF Support/Resistance' \
      5 'TTF Support/Resistance - Exclusively' \
      6 'H(n)TF Fib' \
      7 'H(n)TF Fib - Exclusively' \
      8 'H(n)TF Support/Resistance' \
      9 'H(n)TF Support/Resistance - Exclusively' \
      2>&1 1>&3)
  what_selected
  custom_query
      ;;
  8)
    fieldt
  queries=$(dialog \
    --title "$field_title" \
    --no-tags \
    --backtitle "$title" \
    --cancel-label "Back" \
    --menu "$field_title" 0 0 9 \
      1 'No' \
      2 'Yes' \
      3 'Yes - Overshot' \
      4 'Yes - Undershot' \
      5 'No/Yes' \
      2>&1 1>&3)
  what_selected
  custom_query
      ;;
  9)
    fieldt
  queries=$(dialog \
    --title "$field_title" \
    --no-tags \
    --backtitle "$title" \
    --cancel-label "Back" \
    --menu "$field_title" 0 0 9 \
      1 'One Swing' \
      2 'One Swing - Reversal' \
      3 'One Swing - Reversal Breakout' \
      4 'Double Bottom/Top' \
      5 'Half Double Bottom/Top' \
      6 'Quarter Double Bottom/Top' \
      2>&1 1>&3)
  what_selected
  custom_query
      ;;
    esac
}


# ---------- Above section is varaibles and funvtions------------------------------




# Below line makes me input a csv file to read the data
#read -e -p "Hello, Please input the CSV file to be read: " csv

# main page of program
while true; do
  exec 3>&1
  main=$(dialog \
    --backtitle "$title" \
    --title "Menu" \
    --no-tags \
    --cancel-label "Exit" \
    --extra-button --extra-label "Clear Menu" \
    --menu "Please select:" 0 0 9 \
    1 "First Query" \
    2 "Second Query" \
    3 "Third Query" \
    4 "Print Fields" \
    5 "View" \
    2>&1 1>&3)
  # exit statements below 
  case $? in
    1)
      clear
      echo "Hope it was helpful Alex, Till next time I guess :)"
      # testing echos to see what variables are being assigned properly
      echo "$awk_output"
      echo "$out1 $out2 $out3"
      echo "$printing"
      echo "$prints"
      echo "$header"
      exit
      ;;
    3)
      clearing=$(dialog \
        --title "$title" \
        --backtitle "clearing menu" \
        --cancel-label "Back" \
        --menu "Clearing Menu" 0 0 9 \
        1 "Clear 2nd Query" \
        2 "Clear 3nd Query" \
        3 "Clear All Queries" \
        2>&1 1>&3)
      case $clearing in
        1)
          clear_2
          dialog --sleep 1 \
            --title "$title" \
            --infobox "Cleared 2nd query" 10 52;;
        2)
          clear_3
          dialog --sleep 1 \
            --title "$title" \
            --infobox "Cleared 3rd query" 10 52;;
        3)
          clear_all
          dialog --sleep 1 \
            --title "$title" \
            --infobox "Cleared all queries" 10 52;;
      esac;;
    255)
      clear
      echo "aaaahhh it was helpful Alex, Till next time I guess :)"
      exit
      ;;
  esac
  case $main in
    1)
      fields=$(dialog \
        --backtitle "$title" \
        --title "First Query" \
        --no-tags \
        --cancel-label "Exit" \
        --menu "Please select:" 0 0 9 \
        1 'HTF move this move is in' \
        2 'Direction in relation to HTF move' \
        3 'Previous move on this TF' \
        4 'Line the previous move started from' \
        5 'Did it overshoot or undershoot' \
        6 'What is this move' \
        7 'What line Did it start from' \
        8 'Did it overshoot or undershoot' \
        9 'How did the beginning of this move reverse from the LTF perspective' \
        2>&1 1>&3)
      query_field
      ;;
    2)
      fields=$(dialog \
        --backtitle "$title" \
        --title "Second Query" \
        --no-tags \
        --cancel-label "Exit" \
        --menu "Please select:" 0 0 9 \
        1 'HTF move this move is in' \
        2 'Direction in relation to HTF move' \
        3 'Previous move on this TF' \
        4 'Line the previous move started from' \
        5 'Did it overshoot or undershoot' \
        6 'What is this move' \
        7 'What line Did it start from' \
        8 'Did it overshoot or undershoot' \
        9 'How did the beginning of this move reverse from the LTF perspective' \
        2>&1 1>&3)
      query_field
      ;;
    3)
      fields=$(dialog \
        --backtitle "$title" \
        --title "Third Query" \
        --no-tags \
        --cancel-label "Exit" \
        --menu "Please select:" 0 0 9 \
        1 'HTF move this move is in' \
        2 'Direction in relation to HTF move' \
        3 'Previous move on this TF' \
        4 'Line the previous move started from' \
        5 'Did it overshoot or undershoot' \
        6 'What is this move' \
        7 'What line Did it start from' \
        8 'Did it overshoot or undershoot' \
        9 'How did the beginning of this move reverse from the LTF perspective' \
        2>&1 1>&3)
      query_field
      ;;
    4)
      print_default
      prints=($(dialog \
        --title "$title" \
        --no-tags \
        --cancel-label "Back" \
        --checklist "Please select:" 0 0 9 \
        1 'HTF Move this move is in' $print1\
        2 'Direction in relation to HTF move' $print2\
        3 'Previous move on this TF' $print3\
        4 'Line the previous move started from' $print4\
        5 'Did it overshoot or undershoot' $print5\
        6 'What is this move' $print6\
        7 'What line Did it start from' $print7\
        8 'Did it overshoot or undershoot' $print8\
        9 'How did the beginning of this move reverse from the LTF perspective' $print9\
        2>&1 1>&3))
      for p in "${prints[@]}"; do
        case "${p}" in
          1)
            printing+='"\t"$3'
            header+='\tHTF move';;
          2)
            printing+='"\t"$4'
            header+='\tDirection in relation to HTF move';;
          3)
            printing+='"\t"$5'
            header+='\tPrevious move';;
          4)
            printing+='"\t"$6'
            header+='\tLine previous move started from';;
          5)
            printing+='"\t"$7'
            header+='\tPrevious move over/undershoot';;
          6)
            printing+='"\t"$8'
            header+='\tThis move';;
          7)
            printing+='"\t"$9'
            header+='\tLine this move started from';;
          8)
            printing+='"\t"$10'
            header+='\tThis move over/undershoot';;
          9)
            printing+='"\t"$11'
            header+='\tLTF reversal pattern';;
        esac
      done
      ;;
    5)
      awk_output=$(awk -F, \
        "$out1 $out2 $out3 {print NR,$printing}" ~/Documents/price_database/08_10_2020.csv)
      dialog --title "$title" \
        --no-collapse \
        --extra-button --extra-label "To-File" \
        --msgbox "$awk_output" 40 180

        if [ $? = 3 ]; then \
          file=$(dialog --title "$title" \
          --fselect ~/Documents/price_database/research/ 14 48 2>&1 1>&3)

          file_print | install -D /dev/stdin "$file.org"
        fi
        ;;
  esac
done
